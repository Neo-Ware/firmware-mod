<html>
<head>
    <title>Speedtest</title>
    <meta http-equiv="Pragma" content="no-cache">
    <link rel="stylesheet" href="/arris_style.css">
    <!--[if IE]>
        <link rel="stylesheet" href="/arris_style_ie.css">
    <![endif]-->
    <script LANGUAGE="JavaScript">
    	var refresh_tmrId = 0;
        function SetTestStatus(statusCode, content)
        {
        	if (statusCode == 1){ // In progress...
				document.getElementById("div_result_details").style.display = "none";
				document.getElementById("div_config").style.display = "none";
				document.config.Cancel.style.display = "inline";
				document.getElementById("TestStatus").innerHTML="in progress: "+content+"% completed";
				refresh_tmrId = window.setTimeout(function(){
					//window.location.href = window.location.href;
					DirectionChanged();
				}, 2000);
				return;
			}else if (statusCode==2 || statusCode == 4){
				document.getElementById("TestStatus").innerHTML=content;
			}else if (statusCode == 100 ){ // UDP Echo in progress
				document.getElementById("div_result_details").style.display = "none";
				document.getElementById("div_config").style.display = "none";
				document.config.Cancel.style.display = "inline";
				document.config.Cancel.value = "Stop";
				document.getElementById("TestStatus").innerHTML="UDP Echo is in progress, click 'Stop' button to check the result.";
				
				return;
			}
            document.getElementById("div_result_details").style.display = "block";
			document.getElementById("div_config").style.display = "block";
        }
		function clearRefreshTimer(){
			clearTimeout(refresh_tmrId);
		}
        function SetTestConditions(StartTime, StartLines, EndTime, EndLines, CpeEnabled)
        {
            document.getElementById("StartTime").innerHTML=StartTime;
            document.getElementById("StartLines").innerHTML=StartLines;
            document.getElementById("CpeEnabled").innerHTML=CpeEnabled;
            document.getElementById("EndTime").innerHTML=EndTime;
            document.getElementById("EndLines").innerHTML=EndLines;
        }
		function SetTextValue(id, value){
			value = value.replace(/&/g,'&amp;').replace(/>/g,'&gt;').replace(/</g,'&lt;').replace(/"/g,'&quot;');
			document.getElementById(id).innerHTML = value;
		}
		function SetFieldValue(name, value){
			document.config[name].value = value;
		}
        function SetDnsTime(content)
        {
	    document.getElementById("DnsTime").innerHTML=content;
        }
        function SetLookupTime(content)
        {
            document.getElementById("LookupTime").innerHTML=content;
        }
        function SetSetupTime(content)
        {
            document.getElementById("SetupTime").innerHTML=content;
        }
        function SetTransferTime(content)
        {
            document.getElementById("TransferTime").innerHTML=content;
        }
        function SetTotalTime(content)
        {
            document.getElementById("TotalTime").innerHTML=content;
        }
		
		function SetResultTitle(title)
		{
			document.getElementById("ResultTitle").innerHTML=title;
		}
        function SetPayloadRx(bytes, speed, pckts)
        {
            document.getElementById("PayloadRxBytes").innerHTML=bytes;
            document.getElementById("PayloadRxSpeed").innerHTML=speed;
            document.getElementById("PayloadRxPckts").innerHTML=pckts;
        }

        function SetFilteredRx(bytes, speed, pckts)
        {
            document.getElementById("FilteredRxBytes").innerHTML=bytes;
            document.getElementById("FilteredRxSpeed").innerHTML=speed;
            document.getElementById("FilteredRxPckts").innerHTML=pckts;
        }

        function SetTotalRx(bytes, speed, pckts)
        {
            document.getElementById("TotalRxBytes").innerHTML=bytes;
            document.getElementById("TotalRxSpeed").innerHTML=speed;
            document.getElementById("TotalRxPckts").innerHTML=pckts;
        }
        //function SetErrors(rx)
        //{
            //document.getElementById("ErrorRxPckts").innerHTML=rx;
        //}
        //function SetDropped(rx)
        //{
            //document.getElementById("DroppedRxPckts").innerHTML=rx;
        //}
        function SetTestMode(val)
        {
            document.config.Mode.value = val;
            ModeChanged();
        }
        function SetTestDirection(val)
        {
            document.config.Direction.value = val;
			SettingDisplay(val);
        }
        function SetAddress(val)
        {
            document.config.Address.value = decodeURIComponent(val);
        }
        function SetPort(val)
        {
            document.config.Port.value = val;
        }
        function SetUsername(val)
        {
            document.config.Username.value = val;
        }
        function SetPassword(val)
        {
            document.config.Password.value = val;
        }
        function SetFilename(val)
        {
            document.config.Filename.value = decodeURIComponent(val);
        }
        function SetUploadSize(val)
        {
            document.config.UploadSize.value = val;
        }
        function SetUploadScript(val)
        {
            document.config.UploadScript.value = decodeURIComponent(val);
        }
        function SetUploadPostFields(val)
        {
            document.config.UploadPostFields.value = decodeURIComponent(val);
        }
        function SetUploadFileField(val)
        {
            document.config.UploadFileField.value = decodeURIComponent(val);
        }
        function SetTCPWindowSize(val)
        {
            document.config.TCPWindowSize.value = val;
        }
        function SetTCPTimeStamping(val)
        {
            if (val == '1')
            {
                document.config.TCPTimestamping.checked = true;
            }
            else
            {
                document.config.TCPTimestamping.checked = false;
            }
        }
        function SetTCPMSS(val)
        {
            document.config.TCPMSS.value = val;
        }
        function SetPMTU(val)
        {
            if (val == '1')
            {
                document.config.PMTUD.checked = true;
                document.config.MTU.disabled = true;
            }
            else
            {
                document.config.PMTUD.checked = false;
                document.config.MTU.disabled = false;
            }
        }
        function SetMTU(val)
        {
            document.config.MTU.value = val;
        }
        function SetCPEAccess(val)
        {
            document.config.CPEAccess.value = val;
        }
        function SetCurRes(val)
        {
            //document.resultshead.CurResult.value = val;
            document.config.CurResult.value = val;
        }
        function DisablePrev()
        {
            document.config.PrevResult.disabled = true;
        }
        function DisableNext()
        {
            document.config.NextResult.disabled = true;
        }
        function EnableMTU()
        {
            if (document.config.PMTUD.checked)
            {
                document.config.MTU.disabled = true;
            }
            else
            {
                document.config.MTU.disabled = false;
            }
        }
        function EnableHTTPUpload()
        {
            var fileszDisplay = (document.config.Direction.value == "1")?"":"none";
            document.getElementById("tr_fileprops").cells[2].style.display=fileszDisplay;
            document.getElementById("tr_fileprops").cells[3].style.display=fileszDisplay;
        }
		var origHttpPortValue = "", origFtpPortValue="";
        function ModeChanged(id)
        {
        	var mode = document.config.Mode.value;
			if (mode == "0" ){//HTTP
				origFtpPortValue = document.config.Port.value;
				if ("" != origHttpPortValue){
					document.config.Port.value = origHttpPortValue;
				}else{
					document.config.Port.value = "80";
				}
                document.getElementById("tr_authentication").style.display='none';
			}else if (mode == "2"){//FTP
				origHttpPortValue = document.config.Port.value;
				if ("" != origFtpPortValue){
					document.config.Port.value = origFtpPortValue;
				}else{
					document.config.Port.value = "21";
				}
                document.getElementById("tr_authentication").style.display='';
			}
            EnableHTTPUpload();
        }
        function DirectionChanged(id)
        {
        	id = document.config.Direction.value;
			var url = location.pathname + '?direction=' + id;
			document.location.href = url;
        }
		function SettingDisplay(dirVal)
		{
			if ( dirVal==3 ){
				document.getElementById("UDPEchoSettings").style.display = "block";			
			}else if (dirVal==0 || dirVal==1  ){
				document.getElementById("AppLayerSettings").style.display = "block";
			}
			EnableHTTPUpload();
		}
        function SetAction(act)
        {
            document.config.action = act;
        }
        String.prototype.trim = function() {
        	return this.replace(/^\s+|\s+$/g,"");
        }
        function trimTextValue(txtCtrl) {
            var v = txtCtrl.value.trim();
            txtCtrl.value = v;
            return v;
        }
		
		// UNIHAN ADD START FOR PROD00226910
        function isValidDomain(domain) {
            var re = new RegExp(/^((?:(?:(?:\w[\.\-\+]?)*)\w)+)((?:(?:(?:\w[\.\-\+]?){0,62})\w)+)\.(\w{2,6})$/); 
            return domain.match(re);
        }
		// UNIHAN ADD END FOR PROD00226910
		
		function isValidIPv4(ipStr){
            if (!ipStr) return false;
            return /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/.test(ipStr);    
		}
		function isValidIPv6(ipStr){
            if (!ipStr) return false;
            if (!ipStr.match(/:/g) ) return false;
            var m = ipStr.match(/(::)/g);
            if (m && m.length !=1) return false;
            return ipStr.match(/:/g).length<=7 && /::/.test(ipStr)? /^([\da-f]{1,4}(:|::)){1,6}[\da-f]{1,4}$/i.test(ipStr) : /^([\da-f]{1,4}:){7}[\da-f]{1,4}$/i.test(ipStr);  
		}
        function isValidIP(ipStr){
            return isValidIPv4(ipStr) || isValidIPv6(ipStr);
        }
        function isValidPort(portStr){
            if (!portStr) return false;
            if ( /^[0-9]{1,5}$/.test(portStr) ){
                return Number(portStr) >=1 && Number(portStr) <=65535;
            }else{
                return false;
            }
        }
        function isValidFileSize(sizeStr){
            if (!sizeStr) return false;
            if ( /^[0-9]{1,5}$/.test(sizeStr) ){
                return Number(sizeStr) >=1 && Number(sizeStr) <=1024;
            }else{
                return false;
            }
        }
		function validateAppSettings(){
            var val;

            val=trimTextValue(document.config.Address);
            if (val==null || val=="")
            {
                alert("Server Address is required."); document.config.Address.focus();
                return false;
            }
			// UNIHAN MOD START FOR PROD00226910
			else {
				if ( !isValidIP(val) && !isValidDomain(val) ) {
                    alert("Server Address is invalid."); document.config.Address.focus();
                    return false;
				}
            }
			// UNIHAN MOD END FOR PROD00226910

            val=trimTextValue(document.config.Port);
            if (val==null || val=="")
            {
                alert("Server Port is required."); document.config.Port.focus();
                return false;
            }else if ( !isValidPort(val) ) {
                alert("Server Port is invalid."); document.config.Port.focus();
                return false;
            }

            val= trimTextValue(document.config.Filename);
            if (val==null || val=="")
            {
                alert("Filename  is required."); document.config.Filename.focus();
                return false;
            }else if (val.length >63){
                alert("Filename  is too long."); document.config.Filename.focus();
                return false;
            }
            
			if (document.config.Direction.value == "1")
			{
			    val=trimTextValue(document.config.UploadSize);
			    if (val==null || val=="")
			    {
			        alert("Requires a data size to upload."); document.config.UploadSize.focus();
			        return false;
			    }else if (!isValidFileSize(val) ){
                    alert("Upload Size is invalid."); document.config.UploadSize.focus();
			        return false;
                }
			}

            if (document.config.Mode.value != "0") // FTP Mode
            {
                // FTP required parameters (username / password
                
                val=trimTextValue(document.config.Username);
                if (val==null || val=="")
                {
                    alert("FTP protocol requires a username"); document.config.Username.focus();
                    return false;
                }
                
                val=document.config.Password.value;
                if (val==null || val=="")
                {
                    alert("FTP protocol requires a password"); document.config.Password.focus();
                    return false;
                }


            }else if (document.config.Mode.value == "0") {// HTTP Mode, do not support username/password
                document.config.Username.value="";
                document.config.Password.value="";
            }
                
            return true;

		}
		function validateUDPEchoSettings()
		{
			var val;

            val=trimTextValue(document.config.SourceIPAddress );
            if (val==null || val=="")
            {
                alert("Source Address is required.");  document.config.SourceIPAddress.focus();
                return false;
            }else if (!isValidIP(val)){
                alert("Source Address is invalid.");  document.config.SourceIPAddress.focus();
                return false;
            }
			
            val=trimTextValue(document.config.UDPPort);
            if (val==null || val=="")
            {
                alert("UDP Port is required."); document.config.UDPPort.focus();
                return false;
            }else if ( !isValidPort(val) ) {
                alert("UDP Port is invalid."); document.config.UDPPort.focus();
                return false;
            }

			return true;
		}
		function validateForm()
        {
            if (document.config["Action"].value =="cancel"){
                return true; // No need to Check cancel action.
            }
        	var ret = false;
			var dir = document.config.Direction.value;
			if (dir == "0" || dir == "1"){
				ret = validateAppSettings();
			}else{
				ret = validateUDPEchoSettings();
			}
			if (ret){
				document.config.StartTest.disabled = true;
				document.config.Cancel.disabled = true;
			//	document.getElementById("submit_tips").innerHTML = "Speedtest is starting, please wait...";
			}
			return ret;
        }

		function SetSourceIPAddress(val){
			document.config.SourceIPAddress.value = val;
		}
		function SetUDPPort(val){
			document.config.UDPPort.value = val;
		}
		function SetEchoPlusEnabled(val){
			if (val==1){
				document.config.EchoPlusEnabled.checked = true;
			}else{
				document.config.EchoPlusEnabled.checked = false;
			}
		}

		function changeAction(actName){
			document.config["Action"].value = actName;
			if (actName == "cancel"){
				clearRefreshTimer();
			}
		}

    </script>
</head>

<body>
    <div class="wrapper">

	<div class="header">
	    <div class="header_text">
		<h1>Speedtest</h1>
	    </div>
	</div>

	<div id="navbar">
	    <ul>
		<?ARRIS_MENU>
	    </ul>
	</div>
	
	<div class="main_body">
	    <p>
		<!-- INSERT ARRIS PAGE CONTENT HERE -->   
		<form name="config" method="post" action="" onsubmit="return validateForm()"> 
     	<div id="div_result_summary">
	    
	    	<input type="hidden" name="Action"  value="none" />
	    	<input type="hidden" name="RandCode"  value="" />
		    <table width="770" bgColor=#0c055c><tbody>
			<tr>
			    <td width="530"><b><font color=#ffffff size=+1>SpeedTest Results: <span id="TestStatus"> </span></font></b></td>
			    <td width="30"><input type="hidden" name="CurResult"  value="1"><input type="hidden" name="PrevResult"  value="1"><input type="hidden" name="NextResult"  value="1"></td>
			    <td width="30"><input type="submit" name="Cancel" value="Cancel" onclick="changeAction('cancel')"  style="display:none;"></td>
			</tr>
		    </tbody></table>
		</div>    
		
		<div id="div_result_details" style="display:none;" >
		<table border="0" width="770">
		    <tr>
			<th width="100" align="left">Started:</th><td> <span id="StartTime">n/a</span> <span id="StartLines"></span> <span id="CpeEnabled"></span>.</td>
		    </tr>
		    <tr>
			<th width="100" align="left">Ended:</th><td> <span id="EndTime">n/a</span> <span id="EndLines"></span>.</td>
		    </tr>
		    <tr>
			<th width="100" align="left">Elapsed Time:</th><td><span id="ElapsedTime"> Lookup:<span id="LookupTime"></span> ms + Setup:<span id="SetupTime"></span> ms + Transfer:<span id="TransferTime"></span> ms = <span id="TotalTime"></span></span> ms</td>
		    </tr>
		</table>

		<table border ="1" width="770">
		    <tr>
			<th width="200" align="center" >&nbsp;</th>
			<th colspan="3" width="300"  align="center"><span id="ResultTitle">Download</span></th>
		    </tr>
		    <tr>
			<th width="100" align="left">&nbsp;</th>
			<th align="center">Bytes</th>
			<th align="center">bps</th>
			<th align="center">Packets</th>
		    </tr>
		    <tr>
			<th width="100" align="left">Payload</th>
			<td align="center"><span id="PayloadRxBytes"> </span></td>
			<td align="center"><span id="PayloadRxSpeed"> </span></td>
			<td align="center"><span id="PayloadRxPckts"> </span></td>
		    </tr>
		    <tr>
			<th width="100" align="left">Total Interface Traffic</th>
			<td align="center"><span id="TotalRxBytes"> </span></td>
			<td align="center"><span id="TotalRxSpeed"> </span></td>
			<td align="center"><span id="TotalRxPckts"> </span></td>
		    </tr>
<!--		    <tr>
			<th width="100" align="left">Errors</th>
			<td align="center">&nbsp;</td>
			<td align="center">&nbsp;</td>
			<td align="center"><div id="ErrorRxPckts"></div></td>
		    </tr>
		    <tr>
			<th width="100" align="left">Dropped</th>
			<td align="center">&nbsp;</td>
			<td align="center">&nbsp;</td>
			<td align="center"><span id="DroppedRxPckts"> </span></td>
		    </tr>
-->
	    </table>
	    </div>
	    <br>
		<div id="div_config" style="display:none;">
		<table width="770" bgColor=#0c055c><tbody>
		    <tr>
			<td width="430"><b><font color=#ffffff size=+1>SpeedTest Configuration:</font></b>
				<select name="Direction" onchange="DirectionChanged(this)">
			    	<option value="0">Download</option>
			    	<option value="1">Upload</option>
			    	<option value="3">UDP Echo</option>
			    </select>
			</td>
			<td ><span id="submit_tips" style="color:#fff;"></span></td>
			<td width="30"><input type="submit" name="StartTest" onclick="changeAction('start')" value="Start"></td>
		    </tr>
		</tbody></table>
            <!-- StartDirectionConfiguration -->
            <fieldset id="AppLayerSettings" style="display:none;"><legend>Application Layer Settings:</legend>
                <table border="0" width="740">
		            <tr>
                        <td width="200">Test Mode:</td>	                <td colspan="3" width="540">
                        <select name="Mode" onchange="ModeChanged(this)">
                        	<option value="2">FTP</option>
                        	<!--<option value="1">FTP (active)</option> Do not support -->
                        	<option value="0">HTTP</option>
                        </select></td>
                    </tr>
                    <tr>
                        <td width="200">Server Address:</td>            <td width="170"><input name="Address" type="text"></td>
                        <td width="200">Server Port:</td>               <td width="170"><input name="Port" type="text"></td>
                    </tr>
                    <tr id="tr_authentication">
                        <td width="200">Server Username:</td>           <td width="170"><input name="Username" maxlength="31" type="text"></td>
                        <td width="200">Server Password:</td>           <td width="170"><input name="Password" maxlength="31" type="password"></td>
                    </tr>
                    <tr id="tr_fileprops">
                        <td width="200">Filename (>=10MB):</td>         <td width="170"><input name="Filename" maxlength="255" type="text"></td>
                        <td width="200">Upload Size (1-1024MB):</td>     <td width="170"><input name="UploadSize" type="text"></td>
                    </tr>
                </table>
            </fieldset>

			<fieldset id="UDPEchoSettings" style="display:none;"><legend>UDPEcho Settings</legend>                
				<table border="0" width="740">		            
					<tr>
						<td width="200">Interface:</td>   <td width="170"><input name="Interface" type="text" style="background-color:#F0F0F0;" disabled="true"  value="wan0"/></td>
						<td width="200">Source IP Address:</td>  <td width="170"><input name="SourceIPAddress" type="text"></td> 
					</tr>
					<tr>
						<td width="200">UDP Port:</td>           <td width="170"><input name="UDPPort" type="text"></td>
						<td width="200">Echo Plus Enabled:</td>           <td width="170"><input name="EchoPlusEnabled" value="1" type="checkbox"></td>
					</tr>
				</table>
			</fieldset>
		
            <!-- EndDirectionConfiguration -->
		</div>
	    </form>
			
	    <!-- END ARRIS PAGE CONTENT -->
	    </p>
	</div> <!-- main_body -->

	<div class="push"></div>
    </div> <!-- wrapper -->
	 
    <div class="footer">
	<?ARRIS_COPYWRITE>
    </div>
</body>
</html>

